version: '3'

services:
  # Test database - separate from main database
  postgres-test:
    image: postgres:latest
    container_name: postgres_test
    ports:
      - 5433:5432
    environment:
      POSTGRES_PASSWORD: r00tsql
      POSTGRES_DB: construction_system_test
    networks:
      - test-network
    tmpfs:
      - /var/lib/postgresql/data  # Use tmpfs for faster test database

  # Unit tests runner
  unit-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: unit_tests
    volumes:
      - .:/app
      - test_coverage:/app/coverage
    networks:
      - test-network
    command: >
      sh -c "
        echo 'Running Unit Tests...' &&
        go test -v -race -coverprofile=coverage.out -covermode=atomic ./repository ./usecase ./http/controllers &&
        echo 'Unit Tests Completed!'
      "

  # Integration tests runner
  integration-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: integration_tests
    volumes:
      - .:/app
      - test_coverage:/app/coverage
    depends_on:
      - postgres-test
    networks:
      - test-network
    environment:
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=r00tsql
      - DB_NAME=construction_system_test
    command: >
      sh -c "
        echo 'Waiting for test database...' &&
        sleep 10 &&
        echo 'Running Integration Tests...' &&
        go test -v -race ./tests/integration/... &&
        echo 'Integration Tests Completed!'
      "

  # API testing service (like Postman)
  api-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: api_tests
    volumes:
      - .:/app
    depends_on:
      - test-api
      - postgres-test
    networks:
      - test-network
    command: >
      sh -c "
        echo 'Waiting for API to be ready...' &&
        sleep 15 &&
        echo 'Running API Tests...' &&
        go run tests/api/schedule_api_test.go &&
        echo 'API Tests Completed!'
      "

  # Test API instance
  test-api:
    build: .
    container_name: test_api
    ports:
      - 8081:8080
    depends_on:
      - postgres-test
    networks:
      - test-network
    environment:
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=r00tsql
      - DB_NAME=construction_system_test
      - GIN_MODE=debug
    volumes:
      - ./config-test.yml:/app/config.yml

volumes:
  test_coverage:

networks:
  test-network:
    driver: bridge
